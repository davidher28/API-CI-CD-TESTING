name: Commit Stage
run-name: Commit Stage - ${{ github.ref }}

on:
  push:
    branches:
      - '*'
      - '!main'
  workflow_call:
    # Allows for workflow reusability

# Avoids running the same workflow concurrently on the same branch
concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build Application
    steps:
      - uses: actions/checkout@v4

      # ------------------------------- Project + Cache Setup ------------------------------- #
      - name: Set up Python 3.12.1
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.1'
          cache: 'pip'

      - name: Set up cache
        id: setup-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ hashFiles('**/requirements.txt') }}
            pip-

      - name: Install dependencies
        id: install-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  test:
    runs-on: ubuntu-22.04
    needs: build
    name: Unit Test
    steps:
      - uses: actions/checkout@v4

      # ------------------------------- Unit Tests ------------------------------- #
      - name: Restore cache from the build stage
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install cached dependencies
        id: restore-dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Unit Testing with pytest
        id: unit_test
        run: pytest app/tests/services/

  analyze:
    runs-on: ubuntu-22.04
    needs: build
    name: Static Analysis
    steps:
      - uses: actions/checkout@v4

      # ------------------------------- Static Analysis ------------------------------- #
      - name: Restore cache from the build stage
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install cached dependencies
        id: restore-dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint and Format code
        id: lint
        run: pre-commit run --all-files
